# Generated by Django 5.0.4 on 2024-04-18 12:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(help_text='Identifier slug. e.g. angle-chase')),
                ('desc', models.TextField(help_text='Optional longer description.', max_length=200)),
                ('use_filter', models.BooleanField(default=True, help_text='Specifies whether users should use this tag to filter problems. Uncheck this for tags that are purely meant to be used as umbrella parent tags and not as filters.')),
                ('parent', models.ForeignKey(blank=True, help_text='The parent tag that this tag comes under. Filtering by the parent tag filters by this tag too. If this field is blank, the use filter option must be unchecked.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='vonty.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(blank=True, help_text='Problem source. This must be either blank or unique. e.g. IMO 2023/6', max_length=50, null=True, unique=True)),
                ('author', models.CharField(blank=True, help_text='e.g. Abel George Mathew (IND)', max_length=50)),
                ('desc', models.CharField(help_text='A short one-line description of the problem statement. e.g. Fiendish inequality', max_length=100)),
                ('aops_url', models.URLField(blank=True, help_text='A link to the problem on AOPS, if it exists. ')),
                ('hardness', models.PositiveIntegerField(blank=True, help_text='Hardness of the problem according to the MOHS scale. The rating can range from 0 to 60, and can be left blank if the problem is considered not-rateable. See https://web.evanchen.cc/upload/MOHS-hardness.pdf for more information.', null=True, validators=[django.core.validators.MaxValueValidator(60, 'MOHS rating cannot exceed 60'), django.core.validators.StepValueValidator(5, 'MOHS rating must be a multiple of 5')])),
                ('proposal_date', models.DateField(blank=True, help_text='Date of problem creation.', null=True)),
                ('git_url', models.URLField(blank=True, help_text='Read-only link to pull the problem via git. See LINK TO GIT PULL DOCUMENTATION.')),
                ('proposer', models.ForeignKey(blank=True, help_text='The author, if they are a member of this database. Use this in problems you have proposed yourself, for example.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(help_text='The list of tags associated with the problem.', related_name='problem_set', to='vonty.tag')),
            ],
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.CheckConstraint(check=models.Q(('use_filter', False), ('parent__isnull', False), _connector='OR'), name='filter_implies_parent', violation_error_message='Tag meant to be used as a filter must have a parent tag.'),
        ),
    ]
